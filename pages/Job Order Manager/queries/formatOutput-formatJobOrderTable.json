{
  "pluginType": "JS",
  "pluginId": "js-plugin",
  "unpublishedAction": {
    "name": "formatJobOrderTable",
    "fullyQualifiedName": "formatOutput.formatJobOrderTable",
    "datasource": {
      "name": "UNUSED_DATASOURCE",
      "pluginId": "js-plugin",
      "messages": [],
      "isAutoGenerated": false,
      "deleted": false,
      "policies": [],
      "userPermissions": []
    },
    "pageId": "Job Order Manager",
    "collectionId": "Job Order Manager_formatOutput",
    "actionConfiguration": {
      "timeoutInMillisecond": 10000,
      "paginationType": "NONE",
      "encodeParamsToggle": true,
      "body": "()=>{\n  let ret = [];\n  if (QueryJobOrders.data.data.queryJobOrdersWithFilter.length > 0) {\n            for (let j = 0; j < QueryJobOrders.data.data.queryJobOrdersWithFilter.length; j++) {\n              let input = QueryJobOrders.data.data.queryJobOrdersWithFilter[j];\n              let materialCode = \"\";\n              let operationsRequestCode = \"\";\n              operationsRequestCode = input.operationsRequest.code;\n              if (input.operationsRequest.operationsDefinition != null) {\n                if (input.operationsRequest.operationsDefinition.material != null) {\n                  materialCode = input.operationsRequest.operationsDefinition.material.code;\n                }\n              }\n              let line = {\n                id: input.id,\n                name: input.name,\n                dispatchStatus: input.dispatchStatus,\n                materialCode: materialCode,\n                operationsRequestCode: operationsRequestCode,\n                JobOrderQuantity: input.quantity,\n                OperationsRequestQuantity: input.operationsRequest.quantity,\n                ActualProducedQuantity: input.operationsRequest.actualProducedQuantity,\n              };\n              ret.push(line);\n    }\n  }\n\n  return ret;\n}",
      "jsArguments": [],
      "isAsync": false
    },
    "executeOnLoad": false,
    "dynamicBindingPathList": [
      {
        "key": "body"
      }
    ],
    "isValid": true,
    "invalids": [],
    "messages": [],
    "jsonPathKeys": [
      "()=>{\n  let ret = [];\n  if (QueryJobOrders.data.data.queryJobOrdersWithFilter.length > 0) {\n            for (let j = 0; j < QueryJobOrders.data.data.queryJobOrdersWithFilter.length; j++) {\n              let input = QueryJobOrders.data.data.queryJobOrdersWithFilter[j];\n              let materialCode = \"\";\n              let operationsRequestCode = \"\";\n              operationsRequestCode = input.operationsRequest.code;\n              if (input.operationsRequest.operationsDefinition != null) {\n                if (input.operationsRequest.operationsDefinition.material != null) {\n                  materialCode = input.operationsRequest.operationsDefinition.material.code;\n                }\n              }\n              let line = {\n                id: input.id,\n                name: input.name,\n                dispatchStatus: input.dispatchStatus,\n                materialCode: materialCode,\n                operationsRequestCode: operationsRequestCode,\n                JobOrderQuantity: input.quantity,\n                OperationsRequestQuantity: input.operationsRequest.quantity,\n                ActualProducedQuantity: input.operationsRequest.actualProducedQuantity,\n              };\n              ret.push(line);\n    }\n  }\n\n  return ret;\n}"
    ],
    "userSetOnLoad": false,
    "confirmBeforeExecute": false,
    "policies": [],
    "userPermissions": []
  },
  "id": "Job Order Manager_formatOutput.formatJobOrderTable",
  "deleted": false,
  "gitSyncId": "61db6bfa6bd5757f166cc619_624f8262457aa64da9e020df"
}