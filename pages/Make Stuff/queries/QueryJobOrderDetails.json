{
  "pluginType": "API",
  "pluginId": "restapi-plugin",
  "unpublishedAction": {
    "name": "QueryJobOrderDetails",
    "datasource": {
      "pluginId": "restapi-plugin",
      "messages": [],
      "isAutoGenerated": false,
      "id": "Users",
      "deleted": false,
      "policies": [],
      "userPermissions": []
    },
    "pageId": "Make Stuff",
    "actionConfiguration": {
      "timeoutInMillisecond": 10000,
      "paginationType": "NONE",
      "headers": [
        {
          "key": "content-type",
          "value": "application/json"
        }
      ],
      "encodeParamsToggle": true,
      "queryParameters": [],
      "body": "{{\nJSON.stringify({\n    variables: {\n\t\t\torderId:ListOrders.selectedItem.id,\n\t\t\twarehouseId:[selectWarehouse.selectedOptionValue],\n\t\t\twarehouseId2:[selectWarehouse.selectedOptionValue]\n\t\t},\n    query: `\nquery GetJobOrder($orderId:ID!, $warehouseId:[String], $warehouseId2:[ID!]!){\n  getJobOrder(id:$orderId){\n\t\tid\n\t\tname\n\t\tdispatchStatus\n\t\toperationsSegment {\n\t\t\t\tid\n        materialSpecifications {\n\t\t\t\tid\n\t\t\t\t\tisBackFlushed\n          material{\n\t\t\t\t\t\tlabel:code\n\t\t\t\t\t\tvalue:id\n\t\t\t\t\t}\n          materialUse\n          allowedStates{\n\t\t\t\t\t\tid \n\t\t\t\t\t\tcode\n\t\t\t\t\t}\n        }\n      }\n\t\t\n    operationsRequest {\n      equipment {\n        id\n        name\n      }\n      quantity\n      quantityUoM {\n        code\n      }\n      operationsDefinition {\n        material {\n        \tcode\n\t\t\t\t\tname\n\t\t\t\t\tserialMask\n        \tinventoryHandlingPolicy @cascade{\n          \trules {\n            \twarehouse (filter:{id:$warehouseId2}) {\n              \tid\n            \t}\n            \tstateModel {\n              \tstates {\n                \tisPlanned\n                \tstatus {\n                  \tcode\n                \t}\n                \tto {\n\t\t\t\t\t\t\t\t\t\tid\n                    code\n                  }\n              \t}\n            \t}\n          \t}\n        \t}\n        \tmaterialEquipment (filter:{equipmentID:$warehouseId}){\n          \tplanningSummaryByState (filter:{isPlanned:true}){\n            \tplanQty\n            \tstockOnHand\n            \tstate{\n              \tstatus {\n                \tcode\n              \t}\n            \t}\n          \t}\n          \tequipment {\n            \tid\n          \t}\n        \t}\n      \t}\n      }\n    }\n    \n    jobResponses (first: 1 order: { asc: startDateTime }){\n\t\t\t\tid    \n    }\n  }\n}\n    `\n})\n}}",
      "httpMethod": "POST",
      "pluginSpecifiedTemplates": [
        {
          "value": true
        }
      ]
    },
    "executeOnLoad": false,
    "dynamicBindingPathList": [
      {
        "key": "body"
      }
    ],
    "isValid": true,
    "invalids": [],
    "messages": [],
    "jsonPathKeys": [
      "JSON.stringify({\n    variables: {\n\t\t\torderId:ListOrders.selectedItem.id,\n\t\t\twarehouseId:[selectWarehouse.selectedOptionValue],\n\t\t\twarehouseId2:[selectWarehouse.selectedOptionValue]\n\t\t},\n    query: `\nquery GetJobOrder($orderId:ID!, $warehouseId:[String], $warehouseId2:[ID!]!){\n  getJobOrder(id:$orderId){\n\t\tid\n\t\tname\n\t\tdispatchStatus\n\t\toperationsSegment {\n\t\t\t\tid\n        materialSpecifications {\n\t\t\t\tid\n\t\t\t\t\tisBackFlushed\n          material{\n\t\t\t\t\t\tlabel:code\n\t\t\t\t\t\tvalue:id\n\t\t\t\t\t}\n          materialUse\n          allowedStates{\n\t\t\t\t\t\tid \n\t\t\t\t\t\tcode\n\t\t\t\t\t}\n        }\n      }\n\t\t\n    operationsRequest {\n      equipment {\n        id\n        name\n      }\n      quantity\n      quantityUoM {\n        code\n      }\n      operationsDefinition {\n        material {\n        \tcode\n\t\t\t\t\tname\n\t\t\t\t\tserialMask\n        \tinventoryHandlingPolicy @cascade{\n          \trules {\n            \twarehouse (filter:{id:$warehouseId2}) {\n              \tid\n            \t}\n            \tstateModel {\n              \tstates {\n                \tisPlanned\n                \tstatus {\n                  \tcode\n                \t}\n                \tto {\n\t\t\t\t\t\t\t\t\t\tid\n                    code\n                  }\n              \t}\n            \t}\n          \t}\n        \t}\n        \tmaterialEquipment (filter:{equipmentID:$warehouseId}){\n          \tplanningSummaryByState (filter:{isPlanned:true}){\n            \tplanQty\n            \tstockOnHand\n            \tstate{\n              \tstatus {\n                \tcode\n              \t}\n            \t}\n          \t}\n          \tequipment {\n            \tid\n          \t}\n        \t}\n      \t}\n      }\n    }\n    \n    jobResponses (first: 1 order: { asc: startDateTime }){\n\t\t\t\tid    \n    }\n  }\n}\n    `\n})"
    ],
    "userSetOnLoad": true,
    "confirmBeforeExecute": false,
    "policies": [],
    "userPermissions": []
  },
  "id": "Make Stuff_QueryJobOrderDetails",
  "deleted": false,
  "gitSyncId": "61db6bfa6bd5757f166cc619_624521baae85b361029c15e1"
}