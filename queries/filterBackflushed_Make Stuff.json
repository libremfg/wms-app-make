{
  "pluginType": "JS",
  "pluginId": "js-plugin",
  "unpublishedAction": {
    "name": "filterBackflushed",
    "fullyQualifiedName": "FormatMaterialSelect.filterBackflushed",
    "datasource": {
      "name": "UNUSED_DATASOURCE",
      "pluginId": "js-plugin",
      "messages": [],
      "isAutoGenerated": false,
      "deleted": false,
      "policies": [],
      "userPermissions": []
    },
    "pageId": "Make Stuff",
    "collectionId": "Make Stuff_FormatMaterialSelect",
    "actionConfiguration": {
      "timeoutInMillisecond": 10000,
      "paginationType": "NONE",
      "encodeParamsToggle": true,
      "body": "() => {\n\t\tvar ret = []\n\t\tfor (let i = 0; i < QueryJobOrderDetails.data.data.getJobOrder.operationsSegment.materialSpecifications.length; i++) {\n\t\t\tvar spec = QueryJobOrderDetails.data.data.getJobOrder.operationsSegment.materialSpecifications[i]\n\t\t\tif (spec.isBackFlushed == null) {\n\t\t\t\tvar s = spec.materialUse + \" \" + spec.material.label + \" \" + spec.allowedStates[0].code\n\t\t\t\tlet line = {\n\t\t\t\t\t\"label\": s,\n\t\t\t\t\t\"value\": spec.id\n\t\t\t\t}\n\t\t\t\tret.push(line)\n\t\t\t} else {\n\t\t\t\tif (spec.isBackFlushed == false) {\n\t\t\t\t\ts = spec.materialUse + \" \" + spec.material.label + \" \" + spec.allowedStates[0].code\n\t\t\t\t\tlet line = {\n\t\t\t\t\t\t\"label\": s,\n\t\t\t\t\t\t\"value\": spec.id\n\t\t\t\t\t}\n\t\t\t\t\tret.push(line)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn ret\n\t}",
      "jsArguments": [],
      "isAsync": false
    },
    "executeOnLoad": false,
    "clientSideExecution": true,
    "dynamicBindingPathList": [
      {
        "key": "body"
      }
    ],
    "isValid": true,
    "invalids": [],
    "messages": [],
    "jsonPathKeys": [
      "() => {\n\t\tvar ret = []\n\t\tfor (let i = 0; i < QueryJobOrderDetails.data.data.getJobOrder.operationsSegment.materialSpecifications.length; i++) {\n\t\t\tvar spec = QueryJobOrderDetails.data.data.getJobOrder.operationsSegment.materialSpecifications[i]\n\t\t\tif (spec.isBackFlushed == null) {\n\t\t\t\tvar s = spec.materialUse + \" \" + spec.material.label + \" \" + spec.allowedStates[0].code\n\t\t\t\tlet line = {\n\t\t\t\t\t\"label\": s,\n\t\t\t\t\t\"value\": spec.id\n\t\t\t\t}\n\t\t\t\tret.push(line)\n\t\t\t} else {\n\t\t\t\tif (spec.isBackFlushed == false) {\n\t\t\t\t\ts = spec.materialUse + \" \" + spec.material.label + \" \" + spec.allowedStates[0].code\n\t\t\t\t\tlet line = {\n\t\t\t\t\t\t\"label\": s,\n\t\t\t\t\t\t\"value\": spec.id\n\t\t\t\t\t}\n\t\t\t\t\tret.push(line)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn ret\n\t}"
    ],
    "userSetOnLoad": false,
    "confirmBeforeExecute": false,
    "policies": [],
    "userPermissions": []
  },
  "id": "Make Stuff_FormatMaterialSelect.filterBackflushed",
  "deleted": false,
  "gitSyncId": "61db6bfa6bd5757f166cc619_624655294f1a665b230488ca"
}